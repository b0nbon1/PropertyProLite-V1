{
    "swagger": "2.0",
    "info": {
        "description": "Property Pro Lite is a platform where people can create and/or search properties for sale or rent.",
        "version": "1.0",
        "title": "Property Pro Lite",
        "contact": {
            "email": "nyabuyabonvic@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/b0nbon1/PropertyProLite/blob/gh-pages/LICENSE"
        }
    },
    "host": "propertyprolitev1.herokuapp.com",
    "basePath": "/api/v1",
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/auth/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "operationId": "Register user",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "firstname",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users firstname. should be 3 characters or more"
                    },
                    {
                        "name": "lastname",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users lastname. should be 3 characters or more"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "user home address"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users email"
                    },
                    {
                        "name": "phoneNumber",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users phone number"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users password"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successfully created account"
                    },
                    "400": {
                        "description": "Please fill all the fields"
                    },
                    "409": {
                        "description": "Email exists"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login User",
                "operationId": "Login User",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users email"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "users password"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully logged into account"
                    },
                    "400": {
                        "description": "Please fill all the fields"
                    },
                    "401": {
                        "description": "Wrong password"
                    },
                    "404": {
                        "description": "User with such email was not found"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "gets User profile with all of his properties",
                "operationId": "userProfile",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "default": "Bearer {token}",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful got the profile"
                    },
                    "403": {
                        "description": "Token required"
                    },
                    "500": {
                        "description": "internal error server"
                    }
                }
            }
        },
        "/property": {
            "get": {
                "tags": [
                    "property"
                ],
                "summary": "Gets available property",
                "operationId": "getproperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful got the properties"
                    },
                    "404": {
                        "description": "no properties found"
                    },
                    "500": {
                        "description": "internal error server"
                    }
                }
            },
            "post": {
                "tags": [
                    "property"
                ],
                "summary": "Posts a new property",
                "operationId": "post Property",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "default": "Bearer {token}",
                        "type": "string"
                    },
                    {
                        "name": "price",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "price of the property"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Property type"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "state where the property is located"
                    },
                    {
                        "name": "city",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "The city where the property is located at"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "The address of the property"
                    },
                    {
                        "name": "photo",
                        "in": "formData",
                        "required": false,
                        "type": "file",
                        "description": "The image of the property"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created the property successful"
                    },
                    "400": {
                        "description": "Please fill all the fields with required data"
                    },
                    "403": {
                        "description": "Token required"
                    },
                    "500": {
                        "description": "Internal server"
                    }
                }
            }
        },
        "/property/{property_id}": {
            "get": {
                "tags": [
                    "property"
                ],
                "summary": "Gets a single property",
                "operationId": "GetProperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succcessful updated"
                    },
                    "404": {
                        "description": "Property with that id does not exists"
                    }
                }
            },
            "patch": {
                "tags": [
                    "property"
                ],
                "summary": "Updates property type",
                "operationId": "updateProperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "default": "Bearer {token}",
                        "type": "string"
                    },
                    {
                        "name": "price",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "price of the property"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "Property type"
                    },
                    {
                        "name": "state",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "state where the property is located"
                    },
                    {
                        "name": "city",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "The city where the property is located at"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "The address of the property"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succcessful updated"
                    },
                    "400": {
                        "description": "input correct data"
                    },
                    "403": {
                        "description": "Token required"
                    },
                    "404": {
                        "description": "Property with that id does not exists"
                    },
                    "406": {
                        "description": "Not accepted to update the route"
                    }
                }
            },
            "delete": {
                "tags": [
                    "property"
                ],
                "summary": "Deletes a property",
                "operationId": "deleteProperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "default": "Bearer {token}",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succcessful updated"
                    },
                    "403": {
                        "description": "Token required"
                    },
                    "404": {
                        "description": "Property with that id does not exists"
                    },
                    "406": {
                        "description": "Not accepted to delete the route"
                    }
                }
            }
        },
        "/property/{property_id}/sold": {
            "patch": {
                "tags": [
                    "property"
                ],
                "summary": "Mark property as sold",
                "operationId": "soldProperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "default": "Bearer {token}",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property successful sold"
                    },
                    "403": {
                        "description": "Token required"
                    },
                    "404": {
                        "description": "Property with that id does not exists"
                    },
                    "406": {
                        "description": "Not accepted to delete the route"
                    }
                }
            }
        },
        "/properties": {
            "get": {
                "tags": [
                    "property"
                ],
                "summary": "Gets a single property",
                "operationId": "GettypeProperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "ID of the property",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succcessful updated"
                    },
                    "404": {
                        "description": "Property with that id does not exists"
                    }
                }
            }
        },
        "/property/{property_id}/flag": {
            "post": {
                "tags": [
                    "flag"
                ],
                "summary": "Updates property type",
                "operationId": "reportProperty",
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "default": "Bearer {token}",
                        "type": "string"
                    },
                    {
                        "name": "reason",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "description": "price of the property"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succcessful report"
                    },
                    "403": {
                        "description": "token required"
                    },
                    "404": {
                        "description": "Property with that id does not exists"
                    }
                }
            }
        }
    }
}